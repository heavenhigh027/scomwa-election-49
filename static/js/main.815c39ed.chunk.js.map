{"version":3,"sources":["components/Header.js","components/Home.js","api.js","components/FullRoster.js","components/Player.js","components/Roster.js","components/Schedule.js","components/Main.js","components/App.js","index.js"],"names":["Header","to","Home","PlayerAPI","players","number","name","position","all","this","get","id","find","p","FullRoster","map","Player","props","player","parseInt","match","params","Roster","exact","path","component","Schedule","Main","App","render","document","getElementById"],"mappings":"qKAiBeA,EAZA,kBACb,iCACE,8BACE,+BACE,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,UAAT,sBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,gC,OCHGC,EANF,kBACX,8BACE,sECeWC,EAhBG,CAChBC,QAAS,CACP,CAAEC,OAAQ,EAAGC,KAAM,cAAeC,SAAU,KAC5C,CAAEF,OAAQ,EAAGC,KAAM,gBAAiBC,SAAU,KAC9C,CAAEF,OAAQ,EAAGC,KAAM,cAAeC,SAAU,KAC5C,CAAEF,OAAQ,EAAGC,KAAM,kBAAmBC,SAAU,KAChD,CAAEF,OAAQ,EAAGC,KAAM,iBAAkBC,SAAU,KAC/C,CAAEF,OAAQ,EAAGC,KAAM,kBAAmBC,SAAU,MAElDC,IAAK,WAAa,OAAOC,KAAKL,SAC9BM,IAAK,SAASC,GAEZ,OAAOF,KAAKL,QAAQQ,MADH,SAAAC,GAAC,OAAIA,EAAER,SAAWM,OCMxBG,EAdI,kBACjB,8BACE,6BAEIX,EAAUK,MAAMO,KAAI,SAAAF,GAAC,OACnB,6BACE,cAAC,IAAD,CAAMZ,GAAE,kBAAaY,EAAER,QAAvB,SAAkCQ,EAAEP,QAD7BO,EAAER,gBCYNW,EAhBA,SAACC,GACd,IAAMC,EAASf,EAAUO,IACvBS,SAASF,EAAMG,MAAMC,OAAOhB,OAAQ,KAEtC,OAAKa,EAIH,gCACE,+BAAKA,EAAOZ,KAAZ,MAAqBY,EAAOb,OAA5B,OACA,4CAAea,EAAOX,YACtB,cAAC,IAAD,CAAMN,GAAG,UAAT,qBANK,uECGIqB,EARA,kBACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWX,IACvC,cAAC,IAAD,CAAOU,KAAK,kBAAkBC,UAAWT,QCE9BU,EAVE,kBACf,8BACE,+BACE,kDACA,gDACA,qDCcSC,EAVF,kBACX,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,cAAC,IAAD,CAAOsB,KAAK,UAAUC,UAAWH,IACjC,cAAC,IAAD,CAAOE,KAAK,YAAYC,UAAWC,UCL1BE,EAPH,kBACV,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFJC,iBACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.815c39ed.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// The Header creates links that can be used to navigate\n// between routes.\nconst Header = () => (\n  <header>\n    <nav>\n      <ul>\n        <li><Link to='/'>Home</Link></li>\n        <li><Link to='/roster'>Roster</Link></li>\n        <li><Link to='/schedule'>Schedule</Link></li>\n      </ul>\n    </nav>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Home = () => (\n  <div>\n    <h1>Welcome to the Tornadoes Website!</h1>\n  </div>\n)\n\nexport default Home\n","// A simple data API that will be used to get the data for our\n// components. On a real website, a more robust data fetching\n// solution would be more appropriate.\nconst PlayerAPI = {\n  players: [\n    { number: 1, name: \"Ben Blocker\", position: \"G\" },\n    { number: 2, name: \"Dave Defender\", position: \"D\" },\n    { number: 3, name: \"Sam Sweeper\", position: \"D\" },\n    { number: 4, name: \"Matt Midfielder\", position: \"M\" },\n    { number: 5, name: \"William Winger\", position: \"M\" },\n    { number: 6, name: \"Fillipe Forward\", position: \"F\" }\n  ],\n  all: function() { return this.players},\n  get: function(id) {\n    const isPlayer = p => p.number === id\n    return this.players.find(isPlayer)\n  }\n}\n\nexport default PlayerAPI\n","import React from 'react'\nimport PlayerAPI from '../api'\nimport { Link } from 'react-router-dom'\n\n// The FullRoster iterates over all of the players and creates\n// a link to their profile page.\nconst FullRoster = () => (\n  <div>\n    <ul>\n      {\n        PlayerAPI.all().map(p => (\n          <li key={p.number}>\n            <Link to={`/roster/${p.number}`}>{p.name}</Link>\n          </li>\n        ))\n      }\n    </ul>\n  </div>\n)\n\nexport default FullRoster\n","import React from 'react'\nimport PlayerAPI from '../api'\nimport { Link } from 'react-router-dom'\n\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nconst Player = (props) => {\n  const player = PlayerAPI.get(\n    parseInt(props.match.params.number, 10)\n  )\n  if (!player) {\n    return <div>Sorry, but the player was not found</div>\n  }\n  return (\n    <div>\n      <h1>{player.name} (#{player.number})</h1>\n      <h2>Position: {player.position}</h2>\n      <Link to='/roster'>Back</Link>\n    </div>\n  )\n}\n\nexport default Player\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport FullRoster from './FullRoster'\nimport Player from './Player'\n\n// The Roster component matches one of two different routes\n// depending on the full pathname\nconst Roster = () => (\n  <Switch>\n    <Route exact path='/roster' component={FullRoster}/>\n    <Route path='/roster/:number' component={Player}/>\n  </Switch>\n)\n\n\nexport default Roster\n","import React from 'react'\n\nconst Schedule = () => (\n  <div>\n    <ul>\n      <li>6/5 @ Evergreens</li>\n      <li>6/8 vs Kickers</li>\n      <li>6/14 @ United</li>\n    </ul>\n  </div>\n)\n\nexport default Schedule\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Home'\nimport Roster from './Roster'\nimport Schedule from './Schedule'\n\n// The Main component renders one of the three provided\n// Routes (provided that one matches). Both the /roster\n// and /schedule routes will match any pathname that starts\n// with /roster or /schedule. The / route will only match\n// when the pathname is exactly the string \"/\"\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Home}/>\n      <Route path='/roster' component={Roster}/>\n      <Route path='/schedule' component={Schedule}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\n\nconst App = () => (\n  <div>\n    <Header />\n    <Main />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport App from './components/App';\n\nrender((\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'));"],"sourceRoot":""}